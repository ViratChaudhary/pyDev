# -*- coding: utf-8 -*-
"""Credit Card Fraud Detection - Classical Machine Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JhzwBafEjOlnsvfgoqwHd8B32WuOBO7j
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

data = pd.read_csv('creditcard.csv')
data.head()

data.tail()

data.info()

data.isnull()

data.isnull().sum()

data.isnull().any(axis = 1).sum()

data.loc[data.isnull().any(axis = 1)]

data.dropna(axis = 0, how = 'any', inplace = True)

data.isnull().any(axis = 0).sum(), data.isnull().any(axis = 1).sum()

data.isnull().sum()

data['Class'].count()

data['Class'].unique()

data['Class'].value_counts()

safeTransactions = data[data['Class'] == 0.0]
fraudTransactions = data[data['Class'] == 1.0]

safeTransactions['Class'].unique(), fraudTransactions['Class'].unique()

safeTransactions.shape, fraudTransactions.shape

safeTransactions['Amount'].describe()

fraudTransactions['Amount'].describe()

data.groupby('Class').mean()

legit_sample = safeTransactions.sample(n = len(fraudTransactions))

legit_sample.value_counts()

newDf = pd.concat([legit_sample, fraudTransactions], axis = 0)

newDf.head()

newDf.tail()

newDf['Class'].value_counts()

newDf.groupby('Class').mean()

X = newDf.drop(columns='Class', axis = 1)
Y = newDf['Class']

X.head()

Y.head()

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, stratify = Y, random_state = 2)

X_train.shape, X_test.shape

Y_train.shape, Y_test.shape

model = LogisticRegression(solver='lbfgs', max_iter=400)

model.fit(X_train, Y_train)

X_train_pred = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_pred, Y_train)

training_data_accuracy

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

test_data_accuracy